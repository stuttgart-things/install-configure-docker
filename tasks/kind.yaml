---
- name: Download and install kind+kubectl
  ansible.builtin.include_role:
    name: download-install-binary

- name: Generate kind config
  ansible.builtin.template:
    src: kind.yaml.j2
    dest: "{{ kind_cluster_config_path }}/{{ kind_cluster_name }}.yaml"

- name: Restart containerd
  ansible.builtin.systemd:
    name: containerd
    state: restarted

- name: Install, configure, and start KinD
  when: create_kind_cluster|bool
  block:
    - name: Check and delete existing kind cluster
      ansible.builtin.shell: |
        if kind get clusters | grep -q '^{{ kind_cluster_name }}$'; then
          kind delete cluster --name {{ kind_cluster_name }}
        fi
      args:
        executable: /bin/bash
      when: create_kind_cluster|bool
      become: yes
      become_user: "{{ ansible_user }}"
      register: cluster_cleanup
      changed_when: "'Deleted' in cluster_cleanup.stdout"

    - name: Create kind cluster
      ansible.builtin.shell: |
        mkdir -p {{ kubeconfig_folder }}
        kind create cluster --config {{ kind_cluster_config_path }}/{{ kind_cluster_name }}.yaml --name {{ kind_cluster_name }} --kubeconfig {{ kubeconfig_folder }}/{{ kind_cluster_name }}
        kind get clusters
        kubectl get nodes --kubeconfig {{ kubeconfig_folder }}/{{ kind_cluster_name }}
      become: yes
      become_user: "{{ ansible_user }}"

    - name: Verify kind cluster
      ansible.builtin.shell: |
        kind get clusters
        kubectl get nodes --kubeconfig {{ kubeconfig_folder }}/{{ kind_cluster_name }}
      become: yes
      become_user: "{{ ansible_user }}"

    - name: Set kind name as fact
      set_fact:
        kind_cluster_name: "{{ kind_cluster_name }}"